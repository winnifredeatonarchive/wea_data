<?xml version="1.0" encoding="UTF-8"?>
<project basedir="." name="build" default="all">
    
    <include file="buildGlobals.xml"/>
  
    <property name="staticSearchBranch" value="main"/>
    <property name="ss.target" value="allButValidate"/>
    <property name="ss.codeDir" value="${basedir}/code/staticSearch/code"/>
  
    <target name="echoProps">
        <echoproperties/>
    </target>
  
  <target name="getStaticSearch">
   
      <delete dir="${ss.codeDir}"/>
     <exec executable="git">
         <arg line="clone --single-branch --branch ${staticSearchBranch} https://github.com/projectEndings/staticSearch/ ${ss.codeDir}"/>
     </exec>
  </target>
    
  <target name="validate">
      <ant antfile="code/buildValidate.xml" inheritall="false"/>
  </target>
    
  <target name="checkFacs">
      <mkdir dir="temp"/>
      <java classpath="${saxon}" 
          classname="net.sf.saxon.Transform" 
          failonerror="true" fork="true">
          <arg value="-xsl:${project.dir}/code/documentation/check_facs.xsl"/>
          <arg value="-it:check"/>
          <arg value="--suppressXsltNamespaceCheck:on"/>
      </java>
  </target>
 
    
    <target name="createSite">
        <ant antfile="code/buildSite.xml" inheritall="false"/>
    </target>
    
    <target name="createDocSite">
        <ant antfile="code/buildDocumentationSite.xml"/>
    </target>
    
<!--    <target name="createSearch">
        <ant antfile="code/search/buildSearch.xml" inheritall="false"/>
    </target>-->
    
    <target name="createStaticSearch">
        <ant antfile="${ss.codeDir}/build.xml" inheritall="false" >
            <target name="${ss.target}"/>
            <property name="ssConfigFile" value="${basedir}/code/staticSearch/config.xml"/>
        </ant>
    </target>
    
    <target name="cleanUpStaticSearch">
        <java classpath="${saxon}" classname="net.sf.saxon.Transform" failonerror="true" fork="true">
            <arg value="-xsl:${project.dir}/code/xsl/clean_up_ss.xsl"/>
            <arg value="-s:${basedir}/products/site/search.html"/>
            <arg value="-o:${basedir}/products/site/search_clean.html"/>
            <arg value="--suppressXsltNamespaceCheck:on"/>
        </java>
        <move file="${basedir}/products/site/search_clean.html" tofile="${basedir}/products/site/search.html"/>
    </target>

    <target name="makeSiteMap">
        <java classpath="${saxon}" classname="net.sf.saxon.Transform" failonerror="true" fork="true">
            <arg value="-xsl:${project.dir}/code/xsl/create_google_sitemap.xsl"/>
            <arg value="-it:go"/>
            <arg value="outDir=${site.dir}"/>
            <arg value="docsToBuild=${docsToBuild}"/>
            <arg value="--suppressXsltNamespaceCheck:on"/>
        </java>
    </target>

    
    <target name="all" depends="validate, checkFacs, createSite, createDocSite, search, makeSiteMap"/>
    

    <target name="quick">
        <ant antfile="code/buildSite.xml"  target="quick" inheritall="false"/>
    </target>
    
    <target name="justXml">
        <description>target: justXml
        
        The justXml targets is the whole site build minus with the facsimiles and media production. So this includes
        all XML/XHTML generation and validation.
        </description>
        <ant antfile="code/buildSite.xml" target="justXml" inheritall="false"/>
    </target>
    
    <target name="fast">
        <ant antfile="code/buildSite.xml" target="fast" inheritall="false"/>
    </target>
    
    <target name="quickWithFacs">
        <ant antfile="code/buildSite.xml" target="quickWithFacs" inheritall="false"/>
     </target>
    
    <target name="search" depends="getStaticSearch, createStaticSearch, cleanUpStaticSearch"/>
   
    <target name="copyAuxFiles">
        <ant antfile="code/buildSite.xml" target="copyAuxFiles" inheritall="false"/>
    </target>
    
    <target name="copyCSS">
        <ant antfile="code/buildSite.xml" target="copyCSS" inheritall="false"/>
    </target>
    
    <!--Only used in local dev environments-->
    <!--This doesn't work, so just do it at the command line-->
    <!--<target name="watch">
        
        <parallel>
            <exec executable="sass">
                <arg line="site/sass:${site.dir}/css -\-style compressed -\-watch"/>
            </exec>
            <apply executable="esbuild" parallel="true">
                <srcfile/>
                <arg line="-\-watch"/>
                <arg line="-\-outdir=./products/site/js"/>
                <fileset dir=".">
                    <include name="site/js/*.js"/>
                </fileset>
            </apply>
            
        </parallel>
        
    </target>-->
    

    
</project>
