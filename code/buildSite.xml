<?xml version="1.0" encoding="UTF-8"?>
<project basedir="." name="Build Site" default="all">
  
  <property name="echo.separator">***********************************</property>
    
    
  <dirname property="data.dir" file="../README.md"/>
  <property name="siteTemp" value="${data.dir}/products/"/>
  <property name="textsDir" value="${data.dir}/data/texts/"/>
  <property name="xhValidationDir" value="${data.dir}/xhValidation/"/>
    
 <property name="siteDir" value="${data.dir}/../wea/"/>

    
  <fileset id="texts" dir="${textsDir}">
      <include name="**.xml"/>
  </fileset>
    
    <target name="init">
        <delete dir="${siteTemp}"/>
        <mkdir dir="${siteTemp}"/>
    </target>
    
    <target name="copyAuxFiles">
        <copy todir="${siteTemp}">
            <fileset dir="../site">
                <include name="**/**"/>
            </fileset>
        </copy>
        <copy todir="${siteTemp}">
            <fileset dir="../documentation">
                <include name="**.html"/>
            </fileset>
        </copy>
        <copy todir="${siteTemp}/graphics">
            <fileset dir="../graphics">
                <include name="**"/>
            </fileset>
        </copy>
        <copy todir="${siteTemp}/facsimiles">
            <fileset dir="../data/facsimiles">
                <include name="**"/>
            </fileset>
        </copy>
    </target>
    
    <target name="createPDFThumbnails">
        <echo message="${echo.separator}"/>
        <echo message="Creating PDF thumbnails..."/>
        <echo message="${echo.separator}"/>
        <apply executable="convert" dest="${siteTemp}/facsimiles" force="true" failonerror="true">
            <arg line="-density 150 -thumbnail x600"/>
            <srcfile suffix="[0]"/>
            <arg line="+profile 'icc'"/>
            <targetfile/>
            <fileset dir="${siteTemp}/facsimiles">
                <include name="**.pdf"/>
            </fileset>
            <mapper>
                <globmapper from="*.pdf" to="*.png"/>
            </mapper>
        </apply>
    </target>
    
    <target name="getPDFSizes">
        <echo message="${echo.separator}"/>
        <echo message="Getting sizes of PDFs..."/>
        <echo message="${echo.separator}"/>
        <touch file="${siteTemp}facsimiles/files.txt"/>
        <apply executable="du" dir="${siteTemp}/facsimiles" output="${siteTemp}/facsimiles/pdfs.txt" append="true">
            <arg line="-sh"/>
            <fileset dir="${siteTemp}/facsimiles">
                <include name="**.pdf"/>
            </fileset>
        </apply>
        <apply executable="file" dir="${siteTemp}/facsimiles" output="${siteTemp}/facsimiles/pngs.txt" append="true">
            <fileset dir="${siteTemp}/facsimiles">
                <include name="**.png"/>
            </fileset>
        </apply>
      
    </target>
    
    
    
    
    
  <target name="createOriginalXml">
      <echo message="Creating site..."/>
      <java classpath="../lib/saxon9he.jar" classname="net.sf.saxon.Transform" >
          <arg value="-xsl:${data.dir}/code/xsl/xml_original_master.xsl"/>
          <arg value="-s:${data.dir}/code/xsl/xml_original_master.xsl"/>
          <arg value="outDir=${siteTemp}"/>
          <arg value="--suppressXsltNamespaceCheck:on"/>          
      </java>
  </target>  
    
    <target name="validateOriginalXml">
        <ant antfile="buildValidate.xml" inheritall="no">
            <property name="data.dir" value="${siteTemp}/xml/original"/>
        </ant>
    </target>
    
    <target name="createIndex">
        <echo message="Creating index..."/>
        <java classpath="../lib/saxon9he.jar" classname="net.sf.saxon.Transform" failonerror="true" >
            <arg value="-xsl:${data.dir}/code/xsl/xml_index_master.xsl"/>
            <arg value="-s:${data.dir}/code/xsl/xml_index_master.xsl"/>
            <arg value="outDir=${siteTemp}"/>
            <arg value="--suppressXsltNamespaceCheck:on"/>
        </java>
    </target>
    
 <target name="createStandaloneXml">
     <java classpath="../lib/saxon9he.jar" classname="net.sf.saxon.Transform" failonerror="true" >
         <arg value="-xsl:${data.dir}/code/xsl/xml_standalone_master.xsl"/>
         <arg value="-s:${data.dir}/code/xsl/xml_standalone_master.xsl"/>
         <arg value="outDir=${siteTemp}"/>
         <arg value="--suppressXsltNamespaceCheck:on"/>
     </java>
 </target>
    
    <target name="validateStandaloneXml">
        <ant antfile="buildValidate.xml" inheritall="no">
            <property name="data.dir" value="${siteTemp}/xml/standalone"/>
            <property name="rng" value="${data.dir}/sch/tei_all.rng"/>
            <property name="sch" value="${data.dir}/sch/tei_all.sch"/>
            <property name="sch.xsl" value="${data.dir}/sch/tei_all.xsl"/>
        </ant>
    </target>
    
    
  

  <target name="createXhtml">
      <echo message="Creating site..."/>
      <java classpath="../lib/saxon9he.jar" classname="net.sf.saxon.Transform" failonerror="true"  >
          <arg value="-xsl:${data.dir}/code/xsl/xhtml_master.xsl"/>
          <arg value="-s:${data.dir}/code/xsl/xhtml_master.xsl"/>
          <arg value="outDir=${siteTemp}"/>
          <arg value="--suppressXsltNamespaceCheck:on"/>
          
      </java>
  </target>
    
  
 
    
    <target name="validateXhtml">
        <description>
            This target validates the XHTML against the VNU validator.
        </description>
        <echo message="${echo.separator}"/>
        <echo message="Validating XHTML..."/>
        <echo message="${echo.separator}"/>
        <mkdir dir="${xhValidationDir}"/>
        <copy todir="${xhValidationDir}">
            <fileset dir="${siteTemp}">
                <include name="*.html"/>
            </fileset>
        </copy>
        <java jar="${data.dir}/lib/vnu/vnu.jar" failonerror="false" fork="true">
            <arg value="-Dnu.validator.client.content-type=application/xhtml+xml"/>
            <arg value="--format text"/>
            <arg value="--skip-non-html"/>
            <arg value="${xhValidationDir}/"/>
        </java>
        <delete dir="${xhValidationDir}"/>
    </target>
    
  
  <target name="quick" depends="copyAuxFiles, createOriginalXml, createIndex, createStandaloneXml, createXhtml"/>
    
    <target name="all" depends="init, copyAuxFiles, createPDFThumbnails, getPDFSizes, createOriginalXml, validateOriginalXml, createIndex, createStandaloneXml, validateStandaloneXml, createXhtml, validateXhtml "/>
    
    
</project>