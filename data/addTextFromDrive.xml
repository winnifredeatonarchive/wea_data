<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/css" href="addTextFromDrive/ant.css"?>
<project basedir="." name="addTextFromDrive" default="all">
    <description>This build creates a TEI document from the Google Drive.
        To use this build, replace the current values (if filled in) in the form below for your document. 
        See the documentation (https://winnifredeatonarchive.github.io/docs/) for more information 
        on the input values and how to run this build.</description>
    
    
   
    <description>Drive Id: The ID from the Google Drive URL: https://docs.google.com/document/d/[[STUFF IN HERE]]/edit</description>
    <property name="driveId">1VCser484UJAsER8Ox4xI4s5Lq0pfgtvxMJwjtGISNWw</property>
    
    
    <description>Document Id: the TEI document @xml:id in the data/texts folder</description>
    <property name="documentId">LittleJournalMissSpring1</property>
    
    
    <description>Your Id: Your @xml:id</description>
    <property name="yourId">SB2</property>
    
    <description>Encoder Id: The encoder's @xml:id</description>
    <property name="encoderId">SB2</property>
    
    <description>Proofreader Id: The proofreader's @xml:id</description>
    <property name="proofreaderId">MC1</property>
    
    <description>Transcriber Id: The transcriber's @xml:id</description>
    <property name="transcriberId">SB2</property>
    
    <description>Genre Id: The genre id (i.e. poetry/prose/etc)</description>
    <property name="genreId">genreShortStory</property>
    
    <description>Exhibit id: Exhibit id</description>
    <property name="exhibitId">Japan</property>
    
    <description>Document Type id: The document type id (PrimarySourcePublished or PrimarySourceMS)</description>
    <property name="docTypeId">docPrimarySourcePublished</property>
    
    <condition property="isWindows" value="true">
        <os family="windows"/>
    </condition>
    
    <condition property="isUnix">
        <os family="unix" />
    </condition>
   
   
   <description>Once all values have been filled in, press the red play button at the top of the screen. Your file should open automatically in the browser;
   make sure to validate it, correct any metadata, add the facsimile, et cetera.</description>
   
   <target name="init">
       <echo message="**********************************************************"/>
       <echo message="Setting up...."/>
       <echo message="**********************************************************"/>
       <delete dir="temp"/>
       <mkdir dir="temp"/>
   </target>
    
    <target name="download">
        <echo message="**********************************************************"/>
        <echo message="Downloading document from Google Drive"/>
        <echo message="**********************************************************"/>
        <get src="https://docs.google.com/document/d/${driveId}/export?format=epub" dest="temp/${documentId}.epub"/>
        <unzip src="temp/${documentId}.epub" dest="temp/${documentId}_files"/>
        
    </target>
    
    <target name="convert">
        <echo message="**********************************************************"/>
        <echo message="Converting document..."/>
        <echo message="**********************************************************"/>
        <java classpath="addTextFromDrive/saxon9he.jar" classname="net.sf.saxon.Transform" failOnError="true">
            <arg value="-xsl:addTextFromDrive/convert_epub_to_TEI.xsl"/>
            <arg value="-it:createDoc"/>
            <arg value="documentId=${documentId}"/>
            <arg value="yourId=${yourId}"/>
            <arg value="encoderId=${encoderId}"/>
            <arg value="proofreaderId=${proofreaderId}"/>
            <arg value="transcriberId=${transcriberId}"/>
            <arg value="genreId=${genreId}"/>
            <arg value="exhibitId=${exhibitId}"/>
            <arg value="docTypeId=${docTypeId}"/>
            <arg value="--suppressXsltNamespaceCheck:on"/>          
        </java>
    </target>
    
    
    <target name="clean">
        <echo message="**********************************************************"/>
        <echo message="Moving file. This will overwrite the local file."/>
        <echo message="**********************************************************"/>
        <move file="temp/${documentId}.xml" todir="texts/" overwrite="yes"/>
        <echo message="**********************************************************"/>
        <echo message="Deleting temporary directory."/>
        <echo message="**********************************************************"/>
        <delete dir="temp"/>
        <echo message="**********************************************************"/>
        <echo message="Done!"/>
        <echo message="**********************************************************"/>
    </target>
    
    
    <scriptdef name="open" language="javascript">
        <attribute name="file" />
        <![CDATA[
        var location = "file://"+attributes.get("file").toString().replaceAll("\\\\","/");
        location = location.toString().replaceAll(" ","%20");
        location = java.net.URLEncoder.encode(location, "UTF-8");
        location = location.toString().replaceAll("%3A",":");
        location = location.toString().replaceAll("%2F","/");
        location = location.toString().replaceAll("%25","%");
        var uriLocation = java.net.URI.create(location);
        var desktop = java.awt.Desktop.getDesktop();
        desktop.browse(uriLocation);
    ]]>
    </scriptdef>
    
    
    
    <target name="open">
        <property name="outFile" value="${basedir}/texts/${documentId}.xml"/>
        <open file="${outFile}"/>
    </target>
    
    <target name="all" depends="init, download, convert, clean, open"/>
</project>
